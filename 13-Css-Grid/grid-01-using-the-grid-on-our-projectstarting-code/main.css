.container {
  margin: 20px;
  display: grid;
  /* grid-template-columns: 200px 2fr 20% 1fr; */ /* width */
  /* grid-template-columns: 25% 25% 25% 25%; */
  grid-template-columns: repeat(4, 25%);

  /* grid-template-rows: 5rem 2rem; */ /* height */
  grid-template-rows:
    [row-1-start] 5rem [row-1-end row-2-start] minmax(10px, 200px)
    [row-2-end row-3-start] 100px [row-3-end];
  /* minmax() the minimum height an element and the second argument is the maximum height */
  grid-column-gap: 3rem;
  grid-row-gap: 2rem;
  grid-gap: 2rem 3rem;
  /* grid gap define the gaps between the rows & columns */
}

.el1 {
  background: rgba(255, 154, 72, 0.5);
}

.el2 {
  background: rgba(255, 0, 0, 0.5);
  grid-column-start: 1;
  grid-column-end: -1;
  /* grid-row-start: 2; */
  grid-row-start: row-2-start;
  grid-row-end: span 1;
  z-index: 10;
}

.el3 {
  background: rgba(0, 128, 0, 0.5);
  grid-column-start: 2;
  /* grid-column-end: 5; */
  grid-column-end: span 3;
  /* grid-row-start: 1; */
  grid-row-start: row-1-start;
  /* grid-row-end: 3; */
  grid-row-end: row-2-end;
  /* grid-area: row-1-start / 2 / row-2-end / span 3; */
}

.el4 {
  background: rgba(0, 4, 255, 0.5);
}

/* the default behavior for an element with display grid is no settings are set, then it will create

only one column and as many rows as we have child elements. And if one of these divs had a nested child */
